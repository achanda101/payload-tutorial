/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    posts: Post;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    users: {
      posts: 'posts';
    };
  };
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    nav: Nav;
    header: Header;
    homepage: Homepage;
  };
  globalsSelect: {
    nav: NavSelect<false> | NavSelect<true>;
    header: HeaderSelect<false> | HeaderSelect<true>;
    homepage: HomepageSelect<false> | HomepageSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name: string;
  /**
   * Upload a profile picture
   */
  avatar?: (number | null) | Media;
  role: 'admin' | 'editor' | 'writer';
  posts?: {
    docs?: (number | Post)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  caption?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    avatar?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  /**
   * Must be unique and can be used in the URL. If left blank, it will be auto-generated from the title.
   */
  slug: string;
  excerpt?: string | null;
  storiesOfResilience?:
    | {
        /**
         * Upload an image to accompany the content
         */
        image?: (number | null) | Media;
        /**
         * Title of the content block
         */
        title?: string | null;
        tags?:
          | {
              tag?: string | null;
              id?: string | null;
            }[]
          | null;
        /**
         * Enter the main content for the block
         */
        content?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        content_html?: string | null;
        linkType?: ('internal' | 'external') | null;
        /**
         * Select a blog post to link to
         */
        blogPost?: (number | null) | Post;
        /**
         * Enter the external URL (https://example.com)
         */
        externalUrl?: string | null;
        linkLabel?: string | null;
        /**
         * Upload the icon of your social media handle
         */
        icon?: (number | null) | Media;
        /**
         * Enter a social media handle (e.g., @example)
         */
        smHandle?: string | null;
        /**
         * Enter the external URL (https://www.instagram.com/example)
         */
        smLink?: string | null;
        contentPosition?: ('left' | 'right' | 'center') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'mediaCard';
      }[]
    | null;
  featuredPublication?:
    | {
        /**
         * Upload an image to accompany the content
         */
        image?: (number | null) | Media;
        /**
         * Title of the content block
         */
        title?: string | null;
        tags?:
          | {
              tag?: string | null;
              id?: string | null;
            }[]
          | null;
        /**
         * Enter the main content for the block
         */
        content?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        content_html?: string | null;
        linkType?: ('internal' | 'external') | null;
        /**
         * Select a blog post to link to
         */
        blogPost?: (number | null) | Post;
        /**
         * Enter the external URL (https://example.com)
         */
        externalUrl?: string | null;
        linkLabel?: string | null;
        /**
         * Upload the icon of your social media handle
         */
        icon?: (number | null) | Media;
        /**
         * Enter a social media handle (e.g., @example)
         */
        smHandle?: string | null;
        /**
         * Enter the external URL (https://www.instagram.com/example)
         */
        smLink?: string | null;
        contentPosition?: ('left' | 'right' | 'center') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'mediaCard';
      }[]
    | null;
  listOfPublications?:
    | {
        /**
         * Upload an image to accompany the content
         */
        image?: (number | null) | Media;
        /**
         * Title of the content block
         */
        title?: string | null;
        tags?:
          | {
              tag?: string | null;
              id?: string | null;
            }[]
          | null;
        /**
         * Enter the main content for the block
         */
        content?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        content_html?: string | null;
        linkType?: ('internal' | 'external') | null;
        /**
         * Select a blog post to link to
         */
        blogPost?: (number | null) | Post;
        /**
         * Enter the external URL (https://example.com)
         */
        externalUrl?: string | null;
        linkLabel?: string | null;
        /**
         * Upload the icon of your social media handle
         */
        icon?: (number | null) | Media;
        /**
         * Enter a social media handle (e.g., @example)
         */
        smHandle?: string | null;
        /**
         * Enter the external URL (https://www.instagram.com/example)
         */
        smLink?: string | null;
        contentPosition?: ('left' | 'right' | 'center') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'mediaCard';
      }[]
    | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  content_html?: string | null;
  selectPostType: ('article' | 'report' | 'audioPodcast')[];
  author: number | User;
  upload?: (number | null) | Media;
  Seo?: {
    seoTitle?: string | null;
    seoDescription?: string | null;
  };
  media?: {
    featuredImage?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
  deletedAt?: string | null;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  avatar?: T;
  role?: T;
  posts?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        avatar?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  excerpt?: T;
  storiesOfResilience?:
    | T
    | {
        mediaCard?:
          | T
          | {
              image?: T;
              title?: T;
              tags?:
                | T
                | {
                    tag?: T;
                    id?: T;
                  };
              content?: T;
              content_html?: T;
              linkType?: T;
              blogPost?: T;
              externalUrl?: T;
              linkLabel?: T;
              icon?: T;
              smHandle?: T;
              smLink?: T;
              contentPosition?: T;
              id?: T;
              blockName?: T;
            };
      };
  featuredPublication?:
    | T
    | {
        mediaCard?:
          | T
          | {
              image?: T;
              title?: T;
              tags?:
                | T
                | {
                    tag?: T;
                    id?: T;
                  };
              content?: T;
              content_html?: T;
              linkType?: T;
              blogPost?: T;
              externalUrl?: T;
              linkLabel?: T;
              icon?: T;
              smHandle?: T;
              smLink?: T;
              contentPosition?: T;
              id?: T;
              blockName?: T;
            };
      };
  listOfPublications?:
    | T
    | {
        mediaCard?:
          | T
          | {
              image?: T;
              title?: T;
              tags?:
                | T
                | {
                    tag?: T;
                    id?: T;
                  };
              content?: T;
              content_html?: T;
              linkType?: T;
              blogPost?: T;
              externalUrl?: T;
              linkLabel?: T;
              icon?: T;
              smHandle?: T;
              smLink?: T;
              contentPosition?: T;
              id?: T;
              blockName?: T;
            };
      };
  content?: T;
  content_html?: T;
  selectPostType?: T;
  author?: T;
  upload?: T;
  Seo?:
    | T
    | {
        seoTitle?: T;
        seoDescription?: T;
      };
  media?:
    | T
    | {
        featuredImage?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  deletedAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "nav".
 */
export interface Nav {
  id: number;
  TopLevelMenuItems?:
    | {
        label: string;
        MenuItems?:
          | {
              linkType: 'internal' | 'external';
              /**
               * Select a blog post to link to
               */
              blogPost?: (number | null) | Post;
              /**
               * Enter the external URL (https://example.com)
               */
              externalUrl?: string | null;
              label: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  /**
   * Upload the logo for the header
   */
  logo: number | Media;
  /**
   * Enable or disable the search functionality in the header
   */
  searchEnabled?: boolean | null;
  languages: ('en' | 'th' | 'hn')[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage".
 */
export interface Homepage {
  id: number;
  heroTitle: string;
  heroSubtitle?: string | null;
  storiesOfResilience?:
    | {
        /**
         * Upload an image to accompany the content
         */
        image?: (number | null) | Media;
        /**
         * Title of the content block
         */
        title?: string | null;
        tags?:
          | {
              tag?: string | null;
              id?: string | null;
            }[]
          | null;
        /**
         * Enter the main content for the block
         */
        content?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        content_html?: string | null;
        linkType?: ('internal' | 'external') | null;
        /**
         * Select a blog post to link to
         */
        blogPost?: (number | null) | Post;
        /**
         * Enter the external URL (https://example.com)
         */
        externalUrl?: string | null;
        linkLabel?: string | null;
        /**
         * Upload the icon of your social media handle
         */
        icon?: (number | null) | Media;
        /**
         * Enter a social media handle (e.g., @example)
         */
        smHandle?: string | null;
        /**
         * Enter the external URL (https://www.instagram.com/example)
         */
        smLink?: string | null;
        contentPosition?: ('left' | 'right' | 'center') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'mediaCard';
      }[]
    | null;
  featuredPublication?:
    | {
        /**
         * Upload an image to accompany the content
         */
        image?: (number | null) | Media;
        /**
         * Title of the content block
         */
        title?: string | null;
        tags?:
          | {
              tag?: string | null;
              id?: string | null;
            }[]
          | null;
        /**
         * Enter the main content for the block
         */
        content?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        content_html?: string | null;
        linkType?: ('internal' | 'external') | null;
        /**
         * Select a blog post to link to
         */
        blogPost?: (number | null) | Post;
        /**
         * Enter the external URL (https://example.com)
         */
        externalUrl?: string | null;
        linkLabel?: string | null;
        /**
         * Upload the icon of your social media handle
         */
        icon?: (number | null) | Media;
        /**
         * Enter a social media handle (e.g., @example)
         */
        smHandle?: string | null;
        /**
         * Enter the external URL (https://www.instagram.com/example)
         */
        smLink?: string | null;
        contentPosition?: ('left' | 'right' | 'center') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'mediaCard';
      }[]
    | null;
  listOfPublications?:
    | {
        /**
         * Upload an image to accompany the content
         */
        image?: (number | null) | Media;
        /**
         * Title of the content block
         */
        title?: string | null;
        tags?:
          | {
              tag?: string | null;
              id?: string | null;
            }[]
          | null;
        /**
         * Enter the main content for the block
         */
        content?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        content_html?: string | null;
        linkType?: ('internal' | 'external') | null;
        /**
         * Select a blog post to link to
         */
        blogPost?: (number | null) | Post;
        /**
         * Enter the external URL (https://example.com)
         */
        externalUrl?: string | null;
        linkLabel?: string | null;
        /**
         * Upload the icon of your social media handle
         */
        icon?: (number | null) | Media;
        /**
         * Enter a social media handle (e.g., @example)
         */
        smHandle?: string | null;
        /**
         * Enter the external URL (https://www.instagram.com/example)
         */
        smLink?: string | null;
        contentPosition?: ('left' | 'right' | 'center') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'mediaCard';
      }[]
    | null;
  instagramPost?:
    | {
        /**
         * Upload an image to accompany the content
         */
        image?: (number | null) | Media;
        /**
         * Title of the content block
         */
        title?: string | null;
        tags?:
          | {
              tag?: string | null;
              id?: string | null;
            }[]
          | null;
        /**
         * Enter the main content for the block
         */
        content?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        content_html?: string | null;
        linkType?: ('internal' | 'external') | null;
        /**
         * Select a blog post to link to
         */
        blogPost?: (number | null) | Post;
        /**
         * Enter the external URL (https://example.com)
         */
        externalUrl?: string | null;
        linkLabel?: string | null;
        /**
         * Upload the icon of your social media handle
         */
        icon?: (number | null) | Media;
        /**
         * Enter a social media handle (e.g., @example)
         */
        smHandle?: string | null;
        /**
         * Enter the external URL (https://www.instagram.com/example)
         */
        smLink?: string | null;
        contentPosition?: ('left' | 'right' | 'center') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'mediaCard';
      }[]
    | null;
  _status?: ('draft' | 'published') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "nav_select".
 */
export interface NavSelect<T extends boolean = true> {
  TopLevelMenuItems?:
    | T
    | {
        label?: T;
        MenuItems?:
          | T
          | {
              linkType?: T;
              blogPost?: T;
              externalUrl?: T;
              label?: T;
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  logo?: T;
  searchEnabled?: T;
  languages?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage_select".
 */
export interface HomepageSelect<T extends boolean = true> {
  heroTitle?: T;
  heroSubtitle?: T;
  storiesOfResilience?:
    | T
    | {
        mediaCard?:
          | T
          | {
              image?: T;
              title?: T;
              tags?:
                | T
                | {
                    tag?: T;
                    id?: T;
                  };
              content?: T;
              content_html?: T;
              linkType?: T;
              blogPost?: T;
              externalUrl?: T;
              linkLabel?: T;
              icon?: T;
              smHandle?: T;
              smLink?: T;
              contentPosition?: T;
              id?: T;
              blockName?: T;
            };
      };
  featuredPublication?:
    | T
    | {
        mediaCard?:
          | T
          | {
              image?: T;
              title?: T;
              tags?:
                | T
                | {
                    tag?: T;
                    id?: T;
                  };
              content?: T;
              content_html?: T;
              linkType?: T;
              blogPost?: T;
              externalUrl?: T;
              linkLabel?: T;
              icon?: T;
              smHandle?: T;
              smLink?: T;
              contentPosition?: T;
              id?: T;
              blockName?: T;
            };
      };
  listOfPublications?:
    | T
    | {
        mediaCard?:
          | T
          | {
              image?: T;
              title?: T;
              tags?:
                | T
                | {
                    tag?: T;
                    id?: T;
                  };
              content?: T;
              content_html?: T;
              linkType?: T;
              blogPost?: T;
              externalUrl?: T;
              linkLabel?: T;
              icon?: T;
              smHandle?: T;
              smLink?: T;
              contentPosition?: T;
              id?: T;
              blockName?: T;
            };
      };
  instagramPost?:
    | T
    | {
        mediaCard?:
          | T
          | {
              image?: T;
              title?: T;
              tags?:
                | T
                | {
                    tag?: T;
                    id?: T;
                  };
              content?: T;
              content_html?: T;
              linkType?: T;
              blogPost?: T;
              externalUrl?: T;
              linkLabel?: T;
              icon?: T;
              smHandle?: T;
              smLink?: T;
              contentPosition?: T;
              id?: T;
              blockName?: T;
            };
      };
  _status?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}